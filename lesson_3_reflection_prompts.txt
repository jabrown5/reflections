When would you want to use a remote repository rather than keeping all your work
local?

    A remote repository may be helpful in many ways. First, it allows you to be sure that your files are safe
    from things like crashes.  Specifically, something could happen to your computer and so your local drive and
    you might lose everything!  But b/c of GitHub and the remote repository, your code will still be available.
    Second, a remote repository could allow for easier collaboration with others.  They can just navigate to your
    remote repository and see, access, and modify your code.

Why might you want to always pull changes manually rather than having Git
automatically stay up-to-date with your remote repository?

    You may not want changes auto update as you may not want code shared just yet.  It may still be in progress
    so you don't want others to see it just yet.

Describe the differences between forks, clones, and branches.  When would you
use one instead of another?

    Forks occur only on GitHub.  It's like a clone but only on GitHub.

    Clones are copying something from GitHub onto your computer or local drive.

    Branches are just that - a branch or another track taken from the master file.

What is the benefit of having a copy of the last known state of the remote
stored locally?

    It's more easily accessible.

How would you collaborate without using Git or GitHub?  What would be easier,
and what would be harder?

    It'd be alot harder to collaborate w/o GitHub.  There'd have to be a system in place that
    would allow for collaboration - probably something like lots of e-mails informing of updates,
    track changes in a word document, multiple copies saved, etc.

    It may be harder to use GitHub for some people in that they are not very technically savy and you'd
    have to do alot of handholding.  You'd also need to have someone in charge of managing the changes.

When would you want to make changes in a separate branch rather than directly in
master?  What benefits does each approach have?

    Using a separate branch allows you to fully study and understand the impact of your changes/edits
    before you move forward.  If you don't, you may screw up the master more than you need to. Branches are
    also easier to discard.
